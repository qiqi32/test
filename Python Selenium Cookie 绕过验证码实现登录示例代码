# test
TEST
#Python Selenium Cookie 绕过验证码实现登录示例代码_
# FileName : Wm_Cookie_Login.py
# Author  : Adil
# DateTime : 2018/3/20 19:47
# SoftWare : PyCharm
from selenium import webdriver
import time
url = 'https://pgdcdemo.linkwin.com'
def login():
 '''先定义一个正常登录的方法，获取登录前和登录后的cookie'''
driver = webdriver.Chrome()
driver.get(url)
driver.maximize_window()
cookieBefore = driver.get_cookies()
# 打印登录前的cookie
print(cookieBefore)
time.sleep(2)
driver.find_element_by_id("username").clear()
driver.find_element_by_id("username").send_keys("admin")
driver.implicitly_wait(5)
driver.find_element_by_id("password").clear()
driver.find_element_by_id("password").send_keys("Changfu@123")
driver.find_element_by_name('imageField').click()
driver.implicitly_wait(5)
# 加一个休眠，这样得到的cookie 才是登录后的cookie,否则可能打印的还是登录前的cookie
time.sleep(5)
print("登录后！")
cookiesAfter = driver.get_cookies()
print("cookiesAfter:")
print(cookiesAfter)
# cookie 存放到了list,其中是dict
# 对比发现登录后的cookie比登录前多了4个dict。
# 如下代码分别是 1、4 、7、 8
len1 = len(cookiesAfter)
print("len:%d" %len1)
cookie1 = cookiesAfter[0]
cookie2 = cookiesAfter[3]
cookie3 = cookiesAfter[-2]
cookie4 = cookiesAfter[-1]
print("cookie1:%s" %cookie1)
print("cookie2:%s" %cookie2)
print("cookie3:%s" %cookie3)
print("cookie4:%s" %cookie4)
driver.quit()
# 将获取的这四个cookie作为参数，传递给，使用cookie登录的函数，如下
cookieLogin(cookie1,cookie2,cookie3,cookie4)
def cookieLogin(cookie1,cookie2,cookie3,cookie4):

    print("+++++++++++++++++++++++++")
    print("cookieLogin")
    print("cookie2:%s" % cookie2)
    print("cookie4:%s" % cookie4)
driver = webdriver.Chrome()
driver.maximize_window()
# 清除一下cookie
driver.delete_all_cookies()
time.sleep(3)
driver.get(url)
# 打开浏览器后添加访问地址后，添加cookie
driver.add_cookie(cookie1)
driver.add_cookie(cookie2)
driver.add_cookie(cookie3)
driver.add_cookie(cookie4)
print("cookies")
# 打印一下cookie,与上面正常登录的cookie对比一下
print(driver.get_cookies())
time.sleep(5)
# 刷新页面，可以看到已经是登录状态了，至此完成的使用cookie 的登录。
driver.refresh()
time.sleep(5)
driver.quit()
if __name__ == "__main__":

    login()
